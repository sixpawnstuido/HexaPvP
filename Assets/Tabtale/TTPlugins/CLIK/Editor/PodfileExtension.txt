post_install do |installer|
    applicationTargets = [
        'Pods-Unity-iPhone',
    ]
    libraryTargets = [
        'Pods-UnityFramework',
    ]

    embedded_targets = installer.aggregate_targets.select { |aggregate_target|
        libraryTargets.include? aggregate_target.name
    }
    embedded_pod_targets = embedded_targets.flat_map { |embedded_target| embedded_target.pod_targets }
    host_targets = installer.aggregate_targets.select { |aggregate_target|
        applicationTargets.include? aggregate_target.name
    }

    puts "*** #{host_targets}"

    # We only want to remove pods from Application targets, not libraries
    host_targets.each do |host_target|
        puts "==> #{host_target}"
        host_target.xcconfigs.each do |config_name, config_file|
            host_target.pod_targets.each do |pod_target|
                if embedded_pod_targets.include? pod_target
                    pod_target.specs.each do |spec|
                        if spec.attributes_hash['ios'] != nil
                            frameworkPaths = spec.attributes_hash['ios']['vendored_frameworks']
                            else
                            frameworkPaths = spec.attributes_hash['vendored_frameworks']
                        end
                        if frameworkPaths != nil
                            frameworkNames = Array(frameworkPaths).map(&:to_s).map do |filename|
                                extension = File.extname filename
                                File.basename filename, extension
                            end
                            frameworkNames.each do |name|
                                puts "Removing #{name} from OTHER_LDFLAGS of target #{host_target.name}"
                                config_file.frameworks.delete(name)
                            end
                        end
                    end
                end
            end
            puts "Libraries before removal #{config_file.libraries}"
            config_file.libraries.delete('BURelyFoundationGlobalAFN')
            config_file.libraries.delete('BURelyFoundationGlobalAPM')
            config_file.libraries.delete('BURelyFoundationGlobalFoundation')
            config_file.libraries.delete('BURelyFoundationGlobalGecko')
            config_file.libraries.delete('BURelyFoundationGlobalHeader')
            config_file.libraries.delete('BURelyFoundationGlobalNETWork')
            config_file.libraries.delete('BURelyFoundationGlobalSDWebImage')
            config_file.libraries.delete('BURelyFoundationGlobalYYModel')
            config_file.libraries.delete('BURelyFoundationGlobalZFPlayer')
            config_file.libraries.delete('BURelyFoundationGlobalZip')
            config_file.libraries.delete('AmazonAdMarketplaceAdapter')
            config_file.libraries.delete('AdColonyAdapter')
            config_file.libraries.delete('ByteDanceAdapter')
            config_file.libraries.delete('FacebookAdapter')
            config_file.libraries.delete('FyberAdapter')
            config_file.libraries.delete('GoogleAdManagerAdapter')
            config_file.libraries.delete('GoogleAdapter')
            config_file.libraries.delete('InMobiAdapter')
            config_file.libraries.delete('IronSourceAdapter')
            config_file.libraries.delete('MintegralAdapter')
            config_file.libraries.delete('UnityAdsAdapter')
            config_file.libraries.delete('VungleAdapter')
            puts "Libraries after removal #{config_file.libraries}"
            xcconfig_path = host_target.xcconfig_path(config_name)
            config_file.save_as(xcconfig_path)
        end
    end
end
